{% comment %}
  Section: Image Grid (Split - Manual Img Tag - Fixed Link)
{% endcomment %}

<div
  class="image-grid-split color-{{ section.settings.color_scheme }} gradient"
  data-section-id="{{ section.id }}"
  data-section-type="image-grid-split-manual"
>
  <div class="page-width">
    {% if section.settings.heading != blank %}
      <h2 class="image-grid-split__heading title title--large {{ section.settings.heading_align }}">
        {{ section.settings.heading | escape }}
      </h2>
    {% endif %}

    <div class="image-grid-split__container">
      {% comment %} Desktop Images - Visible only on desktop {% endcomment %}
      {% assign desktop_widths = '300,400,500,600,800,1000,1200' %}
      {% assign desktop_sizes = '(min-width: 750px) 30vw, 0px' %}

      {% for i in (1..3) %}
        {%- liquid
          assign d_image_setting = 'desktop_image_' | append: i
          assign d_image = section.settings[d_image_setting]
          assign d_link_setting = 'desktop_link_' | append: i
          assign d_link = section.settings[d_link_setting]

          assign d_alt_text = d_image.alt | default: 'Desktop grid image ' | append: i | escape
        -%}
        <div class="image-grid-split__item image-grid-split__item--desktop {% if d_image == blank %}image-grid-split__item--placeholder{% endif %}">
          {% if d_image != blank %}
            {% comment %} --- Link wraps the image if it exists --- {% endcomment %}
            {% if d_link != blank %}<a href="{{ d_link }}" class="image-grid-split__link">{% endif %}

            {%- assign image_src = d_image | image_url: width: 600 -%}
            {%- assign image_srcset = '' -%}
            {%- assign widths_array = desktop_widths | split: ',' -%}
            {%- for width in widths_array -%}
              {%- assign width_int = width | strip | times: 1 -%}
              {%- assign url = d_image | image_url: width: width_int -%}
              {%- assign image_srcset = image_srcset | append: url | append: ' ' | append: width | append: 'w,' -%}
            {%- endfor -%}

            <img
              src="{{ image_src }}"
              srcset="{{ image_srcset | remove_last: ',' }}"
              sizes="{{ desktop_sizes }}"
              alt="{{ d_alt_text }}"
              loading="lazy"
              class="image-grid-split__image"
              width="{{ d_image.width }}"
              height="{{ d_image.height }}"
            >

            {% if d_link != blank %}</a>{% endif %}
            {% comment %} --- End link wrapper --- {% endcomment %}
          {% else %}
            {% comment %} --- Placeholder --- {% endcomment %}
            {{ 'image' | placeholder_svg_tag: 'placeholder-svg placeholder-svg--small' }}
          {% endif %}
        </div>
      {% endfor %}

      {% comment %} Mobile Images - Visible only on mobile {% endcomment %}
      {% assign mobile_widths = '200,300,400,500,600,800' %}
      {% assign mobile_sizes = '(max-width: 749px) 50vw, 0px' %}

      {% for i in (1..3) %}
        {%- liquid
          assign m_image_setting = 'mobile_image_' | append: i
          assign m_image = section.settings[m_image_setting]
          assign m_link_setting = 'mobile_link_' | append: i
          assign m_link = section.settings[m_link_setting]
          assign mobile_class = 'image-grid-split__item--mobile-' | append: i

          assign m_alt_text = m_image.alt | default: 'Mobile grid image ' | append: i | escape
        -%}
        <div class="image-grid-split__item image-grid-split__item--mobile {{ mobile_class }} {% if m_image == blank %}image-grid-split__item--placeholder{% endif %}">
          {% if m_image != blank %}
            {% comment %} --- Link wraps the image if it exists --- {% endcomment %}
            {% if m_link != blank %}<a href="{{ m_link }}" class="image-grid-split__link">{% endif %}

            {%- assign image_src = m_image | image_url: width: 400 -%}
            {%- assign image_srcset = '' -%}
            {%- assign widths_array = mobile_widths | split: ',' -%}
            {%- for width in widths_array -%}
              {%- assign width_int = width | strip | times: 1 -%}
              {%- assign url = m_image | image_url: width: width_int -%}
              {%- assign image_srcset = image_srcset | append: url | append: ' ' | append: width | append: 'w,' -%}
            {%- endfor -%}

            <img
              src="{{ image_src }}"
              srcset="{{ image_srcset | remove_last: ',' }}"
              sizes="{{ mobile_sizes }}"
              alt="{{ m_alt_text }}"
              loading="lazy"
              class="image-grid-split__image"
              width="{{ m_image.width }}"
              height="{{ m_image.height }}"
            >

            {% if m_link != blank %}</a>{% endif %}
            {% comment %} --- End link wrapper --- {% endcomment %}
          {% else %}
            {% comment %} --- Placeholder --- {% endcomment %}
            {{ 'image' | placeholder_svg_tag: 'placeholder-svg placeholder-svg--small' }}
          {% endif %}
        </div>
      {% endfor %}
    </div>
  </div>
</div>

{% comment %} --- Schema remains the same --- {% endcomment %}
{% schema %}
{
  "name": "Image Grid",
  "tag": "section",
  "class": "section section-image-grid-split",
  "settings": [
    {
        "type": "color_scheme",
        "id": "color_scheme",
        "label": "t:sections.all.colors.label",
        "default": "scheme-1"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Image Grid"
    },
    {
      "type": "select",
      "id": "heading_align",
      "label": "Heading Alignment",
      "options": [
        { "value": "text-left", "label": "Left" },
        { "value": "text-center", "label": "Center" },
        { "value": "text-right", "label": "Right" }
      ],
      "default": "text-center"
    },
    {
      "type": "header",
      "content": "Desktop Images (3 Columns)"
    },
    {
      "type": "image_picker",
      "id": "desktop_image_1",
      "label": "Desktop Image 1 (Left)"
    },
    {
      "type": "url",
      "id": "desktop_link_1",
      "label": "Desktop Image 1 Link"
    },
    {
      "type": "image_picker",
      "id": "desktop_image_2",
      "label": "Desktop Image 2 (Middle)"
    },
    {
        "type": "url",
        "id": "desktop_link_2",
        "label": "Desktop Image 2 Link"
    },
    {
      "type": "image_picker",
      "id": "desktop_image_3",
      "label": "Desktop Image 3 (Right)"
    },
    {
      "type": "url",
      "id": "desktop_link_3",
      "label": "Desktop Image 3 Link"
    },
    {
      "type": "header",
      "content": "Mobile Images (Split Layout)"
    },
    {
      "type": "image_picker",
      "id": "mobile_image_1",
      "label": "Mobile Image 1 (Tall Left)",
      "info": "This image should be taller, it spans 2 rows."
    },
    {
        "type": "url",
        "id": "mobile_link_1",
        "label": "Mobile Image 1 Link"
    },
    {
      "type": "image_picker",
      "id": "mobile_image_2",
      "label": "Mobile Image 2 (Top Right)"
    },
    {
      "type": "url",
      "id": "mobile_link_2",
      "label": "Mobile Image 2 Link"
    },
    {
      "type": "image_picker",
      "id": "mobile_image_3",
      "label": "Mobile Image 3 (Bottom Right)"
    },
    {
        "type": "url",
        "id": "mobile_link_3",
        "label": "Mobile Image 3 Link"
    }
  ],
  "presets": [
    {
      "name": "Image Grid",
      "settings": {
        "heading": "Our Collections"
      }
    }
  ]
}
{% endschema %}
<style>
    /* --- Paste this CSS, replacing the previous version or updating your asset file --- */
  .image-grid-split {
    padding-top: 36px;
    padding-bottom: 36px;
  }

  .image-grid-split__heading {
     margin-bottom: 30px;
  }

  .image-grid-split__container {
    display: grid;
    gap: 10px;
    list-style: none;
    margin: 0;
    padding: 0;
  }

  .image-grid-split__item {
    position: relative;
    overflow: hidden;
    display: block;
  }

  /* Styles for the Link Element (REVISED) */
  .image-grid-split__link {
      display: block; /* Make the link behave like a block element */
      width: 100%;    /* Make it fill the width of the parent item */
      /* REMOVED height: 100%; Let the image inside define the height */
      line-height: 0; /* Prevent extra space below the image */
      text-decoration: none;
      color: inherit;
    height:100%;
  }

  /* Styles for the Image Element (Ensure height: 100% is present) */
  .image-grid-split__image {
    display: block;
    width: 100%;
    height: 100%;     /* Crucial: Image tries to fill container height */
    object-fit: cover;
    max-width: 100%;
  }

  .image-grid-split__item--placeholder {
      min-height: 200px;
      display: flex;
      align-items: center;
      justify-content: center;
       background-color: rgba(var(--color-foreground), 0.04);
       border: 1px solid rgba(var(--color-foreground), 0.08);
  }
  .image-grid-split__item--placeholder .placeholder-svg {
    width: 50px;
    height: 50px;
  }


  /* Mobile Layout (Default) */
  .image-grid-split__container {
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: repeat(2, auto);
     grid-auto-rows: 1fr;
  }

  .image-grid-split__item--desktop {
    display: none;
  }

  .image-grid-split__item--mobile {
    display: block;
     height: 100%; /* Make grid items fill their calculated cell height */
  }

  .image-grid-split__item--mobile-1 {
    grid-column: 1 / 2;
    grid-row: 1 / 3;
     /* No specific aspect ratio needed here, it spans rows */
  }

  .image-grid-split__item--mobile-2 {
    grid-column: 2 / 3;
    grid-row: 1 / 2;
    aspect-ratio: 1 / 1; /* Make top-right square */
  }

  .image-grid-split__item--mobile-3 {
    grid-column: 2 / 3;
    grid-row: 2 / 3;
    aspect-ratio: 1 / 1; /* Make bottom-right square */
  }


  /* Desktop Layout */
  @media screen and (min-width: 750px) {
    .image-grid-split__container {
      grid-template-columns: repeat(3, 1fr);
      grid-template-rows: auto;
      align-items: stretch;
      grid-auto-rows: initial;
    }

    .image-grid-split__item--mobile {
      display: none;
    }

    .image-grid-split__item--desktop {
      display: block;
      grid-column: auto;
      grid-row: auto;
      aspect-ratio: 1 / 1; /* Make desktop images square */
      height: auto;
    }
  }

  /* Alignment helpers for heading */
  .text-left { text-align: left; }
  .text-center { text-align: center; }
  .text-right { text-align: right; }
</style>
